# -*- coding: utf-8 -*-
"""통계분석시각화-matplotlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x4NPdgTyXRZyCtsf51gGoDVPNEveRzIe

matplotlib 메뉴얼 사이트: https://matplotlib.org/
"""

import matplotlib.pyplot as plt

import math

ys = [math.sin(x/10) for x in range(-100,100,1)]

plt.plot(ys)
plt.show()

"""# plot 함수

plot([x], y, [fmt], *, data=None, **kwargs)


plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)
"""

import numpy as np
data = np.arange(10) #y축 데이터
data

plt.plot(data) #도면에 추가 , x축 데이터는 0부터 순차적으로 자동 부여
plt.show() #시각화

#y값만 인자로 전달, x축 데이터는 0부터 순차적으로 자동 부여
plt.plot([1,4,7,9,12,15])
plt.show()

#제목 부여하기
plt.plot([1,4,7,9,12,15]) #도면에 추가
plt.title("plt.plot([1,4,7,9,12,15])") #제목 달기
plt.show() #화면에 시각화

#x,y 전달
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]) #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15])") #제목 달기
plt.show() #화면에 시각화

"""# fmt 

'[marker][line][color]'
"""

#마커 사용 - '.' 점
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'.') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]),'.'") #제목 달기
plt.show() #화면에 시각화

#마커 사용 - 'o' 원
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]),'o'") #제목 달기
plt.show() #화면에 시각화

#마커+라인 사용 - 'o-' 원
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o-') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]),'o-'") #제목 달기
plt.show() #화면에 시각화

#마커+라인 사용 - 'o:' 닷
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]),'o:'") #제목 달기
plt.show() #화면에 시각화

#마커+라인+색상 사용 - 'o:r' 닷
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:r') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15]),'o:r'") #제목 달기
plt.show() #화면에 시각화

#kwargs의 color
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='darkgreen') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='darkgreen')") #제목 달기
plt.show() #화면에 시각화

#kwargs의 color (RGB로)
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='#FF00FF') #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='#FF00FF')") #제목 달기
plt.show() #화면에 시각화

#kwargs의 linewidth 라인 두께
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='#FF00FF',linewidth=5) #도면에 추가
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'o:',color='#FF00FF',linewidth=5)") #제목 달기
plt.show() #화면에 시각화

#데이터를 두 개 이상 전달하기
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'bo',[1,2,3,4,5,7],[8,9,10,15,10,11],'r^')
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'bo',[1,2,3,4,5,7],[8,9,10,15,10,11],'r^')") #제목 달기
plt.show() #화면에 시각화

#데이터를 두 개 이상 전달하기
plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'bo')
plt.plot([1,2,3,4,5,7],[8,9,10,15,10,11],'r^')
plt.title("plt.plot([1,2,3,4,5,7],[1,2,9,7,12,15],'bo') plt.plot([1,2,3,4,5,7],[8,9,10,15,10,11],'r^')") #제목 달기
plt.show() #화면에 시각화

#축 범위 지정하기
plt.plot([1,2,3,4,5],[90,80,85,77,97],'bo')
plt.plot([1,2,3,4,5],[95,81,87,78,94],'r.')
plt.axis([0,6,0,100])
plt.title("scores") #제목 달기
plt.show() #화면에 시각화

#축 이름 지정하기
plt.plot([1,2,3,4,5],[90,80,85,77,97],'bo')
plt.plot([1,2,3,4,5],[95,81,87,78,94],'r.')
plt.axis([0,6,0,100])
plt.xlabel('number')
plt.ylabel('score')
plt.title("scores") #제목 달기
plt.show() #화면에 시각화

#label 표시
plt.plot([1,2,3,4,5],[90,80,85,77,97],'bo',label='class 1')
plt.plot([1,2,3,4,5],[95,81,87,78,94],'r.',label='class 2')
plt.axis([0,6,0,100])
plt.xlabel('number')
plt.ylabel('score')
plt.title("scores") #제목 달기
plt.legend() #label를 표시하세요.
plt.show() #화면에 시각화

#sub 도표 사용하기
plt.subplot(221) #2X2 도표 중에 1
plt.title("221")
plt.plot([1,2,3,4],'ro-')
plt.subplot(222) #2X2 도표 중에 2
plt.title("222")
plt.plot([4,3,2,1],'b.:')
plt.subplot(223) #2X2 도표 중에 3
plt.title("223")
plt.plot([1,3,2,4],'c^-.')
plt.subplot(224) #2X2 도표 중에 4
plt.title("224")
plt.plot([2,4,1,3],'k.--')

plt.show()

#y축에 표현할 값을 지정 + 디폴트 색상 확인
ys_str=[]
for i in range(1,31):
  plt.plot([i,i])
  if i%3 == 0:
    ys_str.append(str(i))
  else:
    ys_str.append(" ")
plt.title("default color, set yticks")
plt.yticks(range(1,31),ys_str)
plt.show()

#배경색
plt.plot([1,1],'ro-')
ax = plt.gca()
ax.set_facecolor('violet')
plt.title("set background color")
plt.show()

#data 사용하기
mdic = dict()
mdic['hour'] = [0,1,2,3,4,5]
mdic['distance'] = [0,5,20,45,70,95]

plt.plot('hour','distance',data=mdic)
plt.title("using data")
plt.savefig('demo.png') 
plt.show()

"""# 막대 그래프

matplotlib.pyplot.bar

matplotlib.pyplot.barh
"""

#막대 그래프
names = ['a','b','c']
scores = [80,90,85]
plt.bar(names,scores) #x,y
plt.xlabel('name')
plt.ylabel('score')
plt.title('name-score bar')
plt.show()

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

plt.rc('font',family='NanumBarunGothic')
plt.title("테스트")
plt.show()

years=['2018','2019','2020','2021']
incomes = [5000,5600,4300,7800]
plt.bar(years,incomes)
plt.title("수직 그래프")
plt.show()
plt.barh(years,incomes)
plt.title("수평 그래프")
plt.show()

names=['a','b','c']
income1 = [200,230,300]
income2 = [100,120,200]
plt.bar(names,income1)
plt.bar(names,income2)
plt.title("중첩")
plt.show()

names=['a','b','c']
income1 = [200,230,300]
income2 = [100,120,200]
plt.bar(names,income1)
plt.bar(names,income2,bottom=income1)
plt.title("쌓기")
plt.show()

names=['a','b','c']
income = [200,230,300]
plt.bar(names,income,align='edge')
plt.title("x틱 위치를 왼쪽으로 정렬")
plt.show()

colors=['red','green','blue']
names=['a','b','c']
income = [200,230,300]
plt.bar(names,income,color=colors)
plt.title("색상 지정")
plt.show()

colors=['red','green','blue']
ecolors=['green','blue','red']
names=['a','b','c']
income = [200,230,300]
plt.bar(names,income,color=colors,edgecolor=ecolors)
plt.title("색상 지정, 에지 색상 지정")
plt.show()

colors=['red','green','blue']
ecolors=['green','blue','red']
names=['a','b','c']
income = [200,230,300]
plt.bar(names,income,color=colors,edgecolor=ecolors,linewidth=3)
plt.title("색상 지정, 에지 색상 지정, 에지 두께")
plt.show()

seqno = [1,2,3,4,5,6,7,8,9]
scores=[90,75,80,85,90,100,88,74,69]
plt.bar(seqno,scores)
plt.xlabel('no')
plt.xlabel('score')
plt.title("no - score" )
plt.show()

#x틱을 개발자가 정하기
seqno = [1,2,3,4,5,6,7,8,9]
scores=[90,75,80,85,90,100,88,74,69]
num_str=[str(no) for no in seqno]
plt.bar(seqno,scores,tick_label=num_str)
plt.xlabel('no')
plt.xlabel('score')
plt.title("no - score" )
plt.show()

print(num_str)

seqno = [1,2,3,4,5,6,7,8,9]
scores=[90,75,80,85,90,100,88,74,69]
num_str=[str(no) for no in seqno]
plt.bar(num_str,scores)
plt.xlabel('no')
plt.xlabel('score')
plt.title("no - score" )
plt.show()

#에러 값을 표현하기
colors=['red','green','blue']
names=['a','b','c']
income = [200,230,300]
err = [2,3,10]
plt.bar(names,income,color=colors,yerr=err)
plt.title("에러 값 표현하기")
plt.show()

#에러 값을 표현하기
colors=['red','green','blue']
names=['a','b','c']
income = [200,230,300]
err = [2,3,10]
plt.barh(names,income,color=colors,xerr=err)
plt.title("에러 값 표현하기")
plt.show()

#에러 값을 표현하기
colors=['red','green','blue']
ecolos =['g','b','r']
names=['a','b','c']
income = [200,230,300]
err = [2,3,10]
plt.bar(names,income,color=colors,yerr=err,ecolor=ecolors)
plt.title("에러 값 표현하기")
plt.show()

#에러 값을 표현하기, 캡 달기
colors=['red','green','blue']
ecolors =['green','blue','red']
names=['a','b','c']
votes = [200,230,300]
err = [2,3,10]
plt.bar(names,votes,color=colors,yerr=err,ecolor='black',capsize=4.0) #캡 달면 에러마다 색상부여 못 함
plt.title("예상 득표 수 - 에러 값 표현하기, 캡 달기")
plt.show()

"""# 파이그래프"""

locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
plt.pie(incomes,labels=locales)
plt.title("지역별 수입")
plt.show()

#돌출시키기
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs)
plt.title("지역별 수입 - 돌출시키기")
plt.show()

#퍼센트 표시하기
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs,autopct='%.2f')
plt.title("지역별 수입 - 퍼센트 표시하기")
plt.show()

#퍼센트 표시할 위치 지정하기
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs,autopct='%.2f',pctdistance=0.8)
plt.title("지역별 수입 - 퍼센트 표시할 위치 지정하기")
plt.show()

#그림자 효과
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs,autopct='%.2f',pctdistance=0.8,shadow=True)
plt.title("지역별 수입 - 퍼센트 표시할 위치 지정하기")
plt.show()

#label 위치 지정
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs,autopct='%.2f',pctdistance=0.8,labeldistance=1.15)
plt.title("지역별 수입 - label 표시할 위치 지정하기")
plt.show()

#시계 방향으로 각도 계산하기
locales = ['서울',"강원",'경북','충남','기타']
incomes = [2300,1200,1800,800,400]
exs=[0,0.1,0,0,0]
plt.pie(incomes,labels=locales,explode=exs,autopct='%.2f',startangle=90,counterclock=False)
plt.title("지역별 수입 - 시계 방향으로 각도 계산하기")
plt.show()

"""# 주석 달기"""

#주석 달기
colors=['red','green','blue']
names=['a','b','c']
income = [200,230,300]
plt.bar(names,income,color=colors)
plt.annotate('a is eh',(-0.3,220))
plt.title("주석 달기")
plt.show()

"""# 이미지 표시 예"""

from tensorflow import keras

(tr_x, tr_y),(te_x,te_y) = keras.datasets.fashion_mnist.load_data()

tr_x.shape, tr_y.shape, te_x.shape, te_y.shape

print(tr_x[0])

for r in range(28):
  for c in range(28):
    if tr_x[9][r][c]==0:
      print("  ",end='')
    else:
      print("■",end='')
  print()

plt.figure(figsize = (6,6))
for index in range(100):
  plt.subplot(10,10,index+1)
  plt.imshow(tr_x[index])
plt.show()