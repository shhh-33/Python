# -*- coding: utf-8 -*-
"""통계분석시각화-12 데이터시각화.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QyhWtG07whS3QmOLm5d1yUGDwjvcicWX

교재 283 페이지
"""

import matplotlib.pyplot as plt

"""plt.plot([x,]y[,fmt]) 기본적인 사용"""

data1 = [10,14,19,20,25]
plt.plot(data1)
plt.show()

import numpy as np

x = np.arange(-4.5,5,0.5)
y = 2*x**2
x,y

plt.plot(x,y)
plt.show()

x = np.arange(-4.5,5,0.5)
y1 = 2*x**2
y2 = 5*x + 30
y3 = 4*x**2+10
plt.plot(x,y1,'bo',label='y = 2x^2')
plt.plot(x,y2,'r-',label='y = 5x+30')
plt.plot(x,y3,'g:',label='y = 4x^2+10')
plt.legend()
plt.show()

plt.plot(x,y1,'bo',x,y2,'r-',x,y3,'g:')
plt.show()

#figure를 설정하지 않을 때 디폴트는 figure(1)에 그림
plt.plot(x,y1)

plt.figure(2)
plt.plot(x,y2)

plt.figure(3)
plt.plot(x,y3)
plt.show()

plt.subplot(2,2,1)
plt.plot(x,y1)

plt.subplot(2,2,2)
plt.plot(x,y2)

plt.subplot(2,2,3)
plt.plot(x,y3)

plt.show()

x = np.linspace(-4,4,100)
y1 = x**3
y2 = 10*x**2-2

plt.plot(x,y1)
plt.plot(x,y2)
plt.show()

plt.plot(x,y1)
plt.plot(x,y2)
plt.xlim(-1,1)
plt.ylim(-3,3)
plt.show()

x = np.arange(0,5,1)
y1 = x
y2 = x+1
y3 = x+2
y4 = x+3

plt.plot(x,y1,'m')
plt.plot(x,y2,'y')
plt.plot(x,y3,'k')
plt.plot(x,y4,'c')
plt.show()

plt.plot(x,y1,'-')
plt.plot(x,y2,'--')
plt.plot(x,y3,'-.')
plt.plot(x,y4,':')
plt.show()

plt.plot(x,y1,'o')
plt.plot(x,y2,'^')
plt.plot(x,y3,'s')
plt.plot(x,y4,'d')
plt.show()

plt.plot(x,y1,'bo-')
plt.plot(x,y2,'r^--')
plt.plot(x,y3,'cs-.')
plt.plot(x,y4,'kd:')
plt.show()

x = np.arange(-4.5,5,0.5)
y1 = 2*x**3
y2 = 3*x**2
plt.plot(x,y1,label='data1')
plt.plot(x,y2,label='data2')
plt.xlabel('x')
plt.ylabel('y')
plt.title("title, xlabel, ylabel")
plt.grid(True)
plt.legend()
plt.show()

x = np.arange(-4.5,5,0.5)
y1 = 2*x**3
y2 = 3*x**2
plt.plot(x,y1)
plt.plot(x,y2)
plt.xlabel('x')
plt.ylabel('y')
plt.title("title, xlabel, ylabel")
plt.grid(True)
plt.legend(['data1','data2'],loc='lower right')
plt.show()

"""# 산점도"""

height = [165,177,160,180,185,155,172]
weight = [62,67,55,74,90,43,64]

plt.plot(height,weight,'o')
plt.xlabel('Height')
plt.ylabel('Weight')
plt.grid(True)
plt.title("Height-Weight")
plt.show()

plt.scatter(height,weight)
plt.xlabel('Height')
plt.ylabel('Weight')
plt.grid(True)
plt.title("Height-Weight")
plt.show()

plt.scatter(height,weight,s=500)
plt.xlabel('Height')
plt.ylabel('Weight')
plt.grid(True)
plt.title("Height-Weight")
plt.show()

size = 100 * np.arange(1,8)
colors = ['r','g','b','c','m','k','y']
plt.scatter(height,weight,s = size,c=colors)
plt.show()

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

plt.rc('font',family='NanumBarunGothic')
plt.title("테스트")
plt.show()

import numpy as np
city =['서울','인천','대전','대구','울산','부산','광주']

lat = [37.56, 37.45, 36.35, 35.87, 35.53, 35.18, 35.16]
lon = [126.97, 126.70, 127.38,128.60,129.31,129.07,126.85]
pop_den = [16154,2751,2839,2790,1099,4454,2995]
size = np.array(pop_den)*0.2
colors = ['r','g','b','c','m','k','y']
plt.figure(figsize=(8,8))
plt.scatter(lon,lat,s=size,c=colors,alpha=0.5)
plt.xlabel("경도(longitude)")
plt.ylabel("위도(latitude)")
plt.title("지역별 인구 밀도(2017)")
for x,y,name in zip(lon,lat,city):
  plt.annotate(name,(x,y)) #plt.text(x,y,name)
plt.show()

"""# 막대그래프"""

ids = ['m01','m02','m03','m04']
be_ex = [27,35,40,33]
af_ex = [30,38,42,37]
n = len(ids)
index = np.arange(n) #np.array, [0,1,2,3]
plt.bar(index,be_ex)
plt.grid(True)
plt.show()

plt.bar(index,be_ex,tick_label=ids)
plt.show()

plt.bar(ids,be_ex)
plt.show()

colors = ['r','g','b','m']
plt.bar(ids,be_ex,color=colors)
plt.show()

colors = ['r','g','b','m']
plt.bar(ids,be_ex,color=colors,width=0.6)
plt.show()

plt.barh(ids,be_ex,color=colors,height=0.6)
plt.show()

bw = 0.4
plt.bar(index,be_ex,color='c',align='edge',width=bw,label='before')
plt.bar(index+bw,af_ex,color='m',align='edge',width=bw,label='after')
plt.xticks(index+bw,ids)
plt.title("운동 전 후 윗몸일으키기 횟수")
plt.legend()
plt.show()

"""# 히스토그램"""

scores=[1,1,2,1,2,2,3,2,1,2,3,2,1,2,4,1,2]
plt.hist(scores,bins=4)
plt.grid(True)
plt.show()